events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log settings
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name ${CURRENT_HOST};

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # Main server block to serve the frontend and API
    server {
        listen 443 ssl;
        server_name ${CURRENT_HOST};

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        # HSTS aka "HTTP STRICT TRANSPORT SECURITY" Headers that helps protect websites against man-in-the-middle attacks such as protocol downgrade attacks and cookie hijacking
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        
        # Serve Vue.js Frontend
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # Reverse proxy to the Backend API (Django)
        # location /user/ {
        #     proxy_pass http://user:8000;  # Backend service (myproject)
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # Custom Error Pages
        error_page 403 404 405 408 /errPages/error40x.html;
        error_page 502 /errPages/error50x.html;
        error_page 413 /413.json;

        location = /413.json {
            internal;
            default_type application/json;
            return 413 '{"message": "Request entity too large"}';
        }
    }
}
