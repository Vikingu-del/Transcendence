user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log settings
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # Main server block to serve the frontend and API
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        client_max_body_size 2M;

        # Common proxy headers for all locations
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_ssl_session_reuse off;
        proxy_cache_bypass $http_upgrade;

        # Serve the Vue frontend
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # Reverse proxy routes to backend services
        location /user/ 
        { 
            proxy_pass http://user:8000;
        }
        location /register/ 
        { 
            proxy_pass http://user:8000/register/;
        }
        location /login/ 
        {
            proxy_pass http://user:8000/login/; 
        }
        location /profile/ 
        {
            proxy_pass http://user:8000/profile/; 
        }
        location /logout/ 
        {
            proxy_pass http://user:8000/logout/;
        }
        location /friends/ 
        {
            proxy_pass http://user:8000/friends/; 
        }
        location /match-history/ 
        {
            proxy_pass http://user:8000/match-history/; 
        }
        location /vault/ 
        {
            proxy_pass http://vault:8200; 
        }
    }
}
