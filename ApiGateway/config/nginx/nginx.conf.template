#load_module modules/ngx_http_modsecurity_module.so;

user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ModSecurity configuration
    #modsecurity on;
    #modsecurity_rules_file /etc/nginx/modsecurity.d/modsecurity.conf;

    # Basic logging
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # WebSocket configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

     map $request_method $cors_method {
        OPTIONS 204;
        default $request_method;
    }

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;


    # HTTP server (redirect to HTTPS)
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name _;

        # SSL Configuration
        ssl_certificate /tmp/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /tmp/nginx/ssl/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 2M;

        # Global CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent' always;
        add_header 'Access-Control-Max-Age' 1728000 always;

        # Frontend proxy
        location / {
            proxy_pass http://frontend:5173;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

       location /api/auth/ {
            # Debug logging
            error_log /var/log/nginx/auth-error.log debug;
            access_log /var/log/nginx/auth-access.log combined;

            proxy_pass http://auth:8001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;

            # Add timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Error handling
            proxy_intercept_errors on;
            error_page 502 = @auth_down;

            # Debug headers
            add_header X-Debug-Target "auth:8001" always;
            add_header X-Debug-Path "$request_uri" always;
        }

        # User Service proxy
        location /api/user/ {
            proxy_pass http://user:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Game Service proxy
        location /api/pong/ {
            proxy_pass http://game:8005/pong/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Media location block
        location /api/user/media/ {
            alias /app/media/;
            try_files $uri $uri/ /default.png;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            access_log /var/log/nginx/media-access.log;
            error_log /var/log/nginx/media-error.log debug;
        }

        location /api/notification {
            proxy_pass http://notification:8006;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # User WebSocket proxy
        location /ws/user/ {
            proxy_pass http://user:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Chat Service proxy
        location /api/chats/ {
            proxy_pass http://chat:8002;
            proxy_http_version 1.1;

            # Enhanced error handling
            proxy_intercept_errors on;
            error_page 502 = @chat_down;

            # Debug logging
            access_log /var/log/nginx/chat-access.log combined;
            error_log /var/log/nginx/chat-error.log debug;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Debug headers
            add_header X-Debug-Target "chat:8002" always;
            add_header X-Debug-Path "$request_uri" always;
        }

        location /ws/chat/ {
            proxy_pass http://chat:8002;
            proxy_http_version 1.1;
            
            # Use the mapped connection upgrade
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Additional important headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass Authorization header
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            
            # WebSocket specific settings
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_buffering off;
            proxy_cache off;
            
            # Allow WebSocket CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            # Debug logging
            access_log /var/log/nginx/chat-ws-access.log combined;
            error_log /var/log/nginx/chat-ws-error.log debug;
            
            # Error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @websocket_error;
        }

        # Game WebSocket proxy
        location /ws/notification/ {
            proxy_pass http://notification:8006;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            # Debug logging
            access_log /var/log/nginx/notification-ws-access.log combined;
            error_log /var/log/nginx/notification-ws-error.log debug;
        }
        

        # Game WebSocket proxy
        location /ws/ {
            proxy_pass http://game:8005;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            # Debug logging
            access_log /var/log/nginx/game-ws-access.log combined;
            error_log /var/log/nginx/game-ws-error.log debug;
        }
        # Vault proxy (internal only)
        location /vault/ {
            proxy_pass http://vault:8200;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            deny all;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            deny all;
        }

        location /vault/ {
            proxy_pass http://vault:8200;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            deny all;
        }

        # Error handlers
        location @auth_down {
            return 502 '{"error": "Auth service unavailable", "status": 502}';
            add_header Content-Type application/json always;
        }

        location @chat_down {
            return 502 '{"error": "Chat service unavailable", "status": 502}';
            add_header Content-Type application/json always;
        }
    }
}